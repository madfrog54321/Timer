<Window x:Class="Timer.RaceWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Timer"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d" 
        Title="Timer" Height="800" Width="800"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        GotFocus="Window_GotFocus"
        FontFamily="pack://application:,,,MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" Icon="/Timer;component/Assets/Images/Graphicloads-Flat-Finance-Timer.ico">

    <Window.Resources>
        <Style TargetType="CheckBox" x:Key="CircleCheckbox">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Ellipse Fill="#00000000"/>
                            <Ellipse x:Name="highLight" Fill="#80222222" Width="0" Height="0"/>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsChecked" Value="True" >
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetName="highLight">
                                            <DoubleAnimation From="0" To="32" Duration="0:0:0.1" Storyboard.TargetProperty="Width">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation From="0" To="32" Duration="0:0:0.1" Storyboard.TargetProperty="Height">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetName="highLight">
                                            <DoubleAnimation From="32" To="0" Duration="0:0:0.1" Storyboard.TargetProperty="Width">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation From="32" To="0" Duration="0:0:0.1" Storyboard.TargetProperty="Height">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Storyboard x:Key="blinkLabel" Duration="0:0:1" FillBehavior="Stop">
            <ColorAnimationUsingKeyFrames
      Storyboard.TargetName="lblStoryboard"
      Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0:0:0" Value="Red" />
                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="White" />
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <Style TargetType="CheckBox" x:Key="CircleCheckbox2">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Opacity" Value="1"></Setter>
            <Setter Property="Foreground" Value="#888888"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Ellipse Fill="#00000000"/>
                            <Ellipse x:Name="highLight" Fill="#80222222" Width="0" Height="0"/>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsChecked" Value="True" >
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames FillBehavior="HoldEnd" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0:0:0" Value="#888888" />
                                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#eeeeee" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimation  Storyboard.TargetName="highLight" From="0" To="32" Duration="0:0:0.1" Storyboard.TargetProperty="Width">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation  Storyboard.TargetName="highLight" From="0" To="32" Duration="0:0:0.1" Storyboard.TargetProperty="Height">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames FillBehavior="HoldEnd" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0:0:0" Value="#eeeeee" />
                                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#888888" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimation  Storyboard.TargetName="highLight" From="32" To="0" Duration="0:0:0.1" Storyboard.TargetProperty="Width">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation  Storyboard.TargetName="highLight" From="32" To="0" Duration="0:0:0.1" Storyboard.TargetProperty="Height">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RadioButton" x:Key="CircleRadioButton">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Ellipse Fill="#00000000"/>
                            <Ellipse x:Name="highLight" Fill="#80222222" Width="0" Height="0"/>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsChecked" Value="True" >
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetName="highLight">
                                            <DoubleAnimation From="0" To="32" Duration="0:0:0.1" Storyboard.TargetProperty="Width">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation From="0" To="32" Duration="0:0:0.1" Storyboard.TargetProperty="Height">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetName="highLight">
                                            <DoubleAnimation From="32" To="0" Duration="0:0:0.1" Storyboard.TargetProperty="Width">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation From="32" To="0" Duration="0:0:0.1" Storyboard.TargetProperty="Height">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid x:Name="MainGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="8"/>
                <RowDefinition Height="32"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="8" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="8">
                <ScrollViewer x:Name="listScrollbar" PreviewMouseDown="listScrollbar_PreviewMouseDown" PreviewMouseWheel="listScrollbar_PreviewMouseWheel">
                    <StackPanel>
                        <StackPanel x:Name="listHolder" Visibility="Collapsed" Margin="8, 8, 8, 48">
                            <StackPanel.LayoutTransform>
                                <ScaleTransform 
                                CenterX="0" CenterY="0"
                                ScaleX="{Binding ElementName=uiScaleSlider,Path=Value}"
                                ScaleY="{Binding ElementName=uiScaleSlider,Path=Value}"
                            />

                            </StackPanel.LayoutTransform>

                        </StackPanel>

                        <WrapPanel x:Name="tileHolder" HorizontalAlignment="Center" Margin="0, 0, 8, 8">
                            <WrapPanel.LayoutTransform>
                                <ScaleTransform 
                                CenterX="0" CenterY="0"
                                ScaleX="{Binding ElementName=tilesSlider,Path=Value}"
                                ScaleY="{Binding ElementName=tilesSlider,Path=Value}"
                            />
                            </WrapPanel.LayoutTransform>


                        </WrapPanel>


                    </StackPanel>
                </ScrollViewer>


                <Button x:Name="btnCreateRacer" ToolTip="Create New Racer" Click="btnCreateRacer_Click" Style="{StaticResource MaterialDesignFloatingActionAccentButton}" Margin="0,0,32,16" Width="48" Height="48" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                    <materialDesign:PackIcon Kind="Plus" Height="32" Width="32" Foreground="#eeeeee"/>
                </Button>
            </Grid>




            <materialDesign:ColorZone Grid.Row="4" Grid.ColumnSpan="8" Mode="PrimaryDark" Padding="8" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                <Grid materialDesign:RippleAssist.IsCentered="True">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <materialDesign:ColorZone VerticalAlignment="Center" Mode="Light" Padding="4 4 4 4" HorizontalAlignment="Left" CornerRadius="2" Panel.ZIndex="1"
                                   Margin="0,0,0,0" MaxWidth="500" MinWidth="300"
                                   materialDesign:ShadowAssist.ShadowDepth="Depth1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="tbCommand" ToolTip="Barcode Input" PreviewLostKeyboardFocus="tbCommand_PreviewLostKeyboardFocus" KeyUp="tbCommand_KeyUp" Grid.Column="0" Margin="8 0 0 0" materialDesign:TextFieldAssist.Hint="Enter Barcode" 
                                     materialDesign:TextFieldAssist.DecorationVisibility="Collapsed" BorderThickness="0"
                                     MinWidth="200" VerticalAlignment="Center" />
                                <CheckBox x:Name="btnLockKeyboard" Checked="btnLockKeyboard_Checked" Unchecked="btnLockKeyboard_Unchecked" Style="{DynamicResource CircleCheckbox2}" Width="32" Height="32" Grid.Column="1" ToolTip="Lock/Unlock Keyboard">
                                    <materialDesign:PackIcon Kind="LockOpen" Margin="0 0 0 0" Width="24" Height="24" />
                                </CheckBox>
                            </Grid>
                        </materialDesign:ColorZone>
                        <Button x:Name="btnGetLast" Click="btnGetLast_Click" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8, 8, 0, 8" Panel.ZIndex="2" Width="32" ToolTip="Get Last Race">
                            <materialDesign:PackIcon Kind="UndoVariant" Width="24" Height="24" />
                        </Button>
                        <Button x:Name="btnStop" Click="btnStop_Click" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8, 8, 0, 8" Panel.ZIndex="2" Width="32" ToolTip="Stop Current Race">
                            <materialDesign:PackIcon Kind="Stop" Width="24" Height="24" />
                        </Button>
                        <Button x:Name="btnNextEmpty" Click="btnNextEmpty_Click" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8, 8, 0, 8" Panel.ZIndex="2" Width="32" ToolTip="Make Next Lane Empty">
                            <materialDesign:PackIcon Kind="FlagCheckered" Width="24" Height="24" />
                        </Button>
                        <Button x:Name="btnReset" Click="btnReset_Click" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8, 8, 0, 8" Panel.ZIndex="2" Width="32" ToolTip="Clear Current Race">
                            <materialDesign:PackIcon Kind="Refresh" Width="24" Height="24" />
                        </Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="auto">
                        <CheckBox x:Name="btnShowClasses" Checked="btnShowClasses_Checked" ToolTip="Show Classes" Unchecked="btnShowClasses_Unchecked" Style="{DynamicResource CircleCheckbox}" Width="32" Height="32" Margin="8">
                            <materialDesign:PackIcon Kind="Group" Width="24" Height="24"  HorizontalAlignment="Center" />
                        </CheckBox>
                        <CheckBox x:Name="btnScrollDown" Checked="btnScrollDown_Checked" ToolTip="Auto Scroll" Style="{DynamicResource CircleCheckbox}" Width="32" Height="32" Margin="8">
                            <materialDesign:PackIcon Kind="ArrowDown" Width="24" Height="24"  HorizontalAlignment="Center" />
                        </CheckBox>
                        <Border BorderThickness="0, 0, 1, 0" BorderBrush="{DynamicResource MaterialDesignBody}" Margin="0 8 0 8" Width="1" HorizontalAlignment="Right"/>
                        <RadioButton x:Name="btnListMode" Checked="btnListMode_Checked" ToolTip="Standings View" HorizontalAlignment="Right" Style="{DynamicResource CircleRadioButton}" Margin="8, 8, 8, 8" Panel.ZIndex="2" Width="32">
                            <materialDesign:PackIcon Kind="ViewHeadline" Width="24" Height="24" />
                        </RadioButton>
                        <RadioButton x:Name="btnTileMode" Checked="btnTileMode_Checked" ToolTip="Tile View" IsChecked="True" HorizontalAlignment="Right" Style="{DynamicResource CircleRadioButton}" Margin="0, 8, 8, 8" Panel.ZIndex="2" Width="32">
                            <materialDesign:PackIcon Kind="ViewModule" Width="24" Height="24" />
                        </RadioButton>
                        <Border BorderThickness="0, 0, 1, 0" BorderBrush="{DynamicResource MaterialDesignBody}" Margin="0 8 0 8" Width="1" HorizontalAlignment="Right"/>
                        <CheckBox x:Name="btnFullScreen" Checked="btnFullScreen_Checked" ToolTip="Full Screen" Unchecked="btnFullScreen_Unchecked" Style="{DynamicResource CircleCheckbox}" Width="32" Height="32" Margin="8, 8, 0, 8">
                            <materialDesign:PackIcon Kind="Presentation" Width="24" Height="24"  HorizontalAlignment="Center" />
                        </CheckBox>
                        <Button HorizontalAlignment="Right" ToolTip="Settings" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8, 8, 0, 8" Panel.ZIndex="2" Width="32" Click="button_Click">
                            <materialDesign:PackIcon Kind="Settings" Width="24" Height="24" />
                        </Button>
                    </StackPanel>
                </Grid>
            </materialDesign:ColorZone>


            <Label Background="{DynamicResource MaterialDesignPaper}" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="8" Grid.RowSpan="4"/>


            <Border Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" BorderThickness="1, 0, 0.5, 0" BorderBrush="{DynamicResource MaterialDesignDivider}" Margin="0, 16, 0, 8"/>
            <Border Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" BorderThickness="0.5, 0, 0.5, 0" BorderBrush="{DynamicResource MaterialDesignDivider}" Margin="0, 16, 0, 8"/>
            <Border Grid.Column="3" Grid.Row="1" Grid.RowSpan="2" BorderThickness="0.5, 0, 0.5, 0" BorderBrush="{DynamicResource MaterialDesignDivider}" Margin="0, 16, 0, 8"/>
            <Border Grid.Column="4" Grid.Row="1" Grid.RowSpan="2" BorderThickness="0.5, 0, 0.5, 0" BorderBrush="{DynamicResource MaterialDesignDivider}" Margin="0, 16, 0, 8"/>
            <Border Grid.Column="5" Grid.Row="1" Grid.RowSpan="2" BorderThickness="0.5, 0, 0.5, 0" BorderBrush="{DynamicResource MaterialDesignDivider}" Margin="0, 16, 0, 8"/>
            <Border Grid.Column="6" Grid.Row="1" Grid.RowSpan="2" BorderThickness="0.5, 0, 1, 0" BorderBrush="{DynamicResource MaterialDesignDivider}" Margin="0, 16, 0, 8"/>

            <Label Grid.Column="1" Grid.Row="1" Content="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <Label Grid.Column="2" Grid.Row="1" Content="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <Label Grid.Column="3" Grid.Row="1" Content="3" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <Label Grid.Column="4" Grid.Row="1" Content="4" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <Label Grid.Column="5" Grid.Row="1" Content="5" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <Label Grid.Column="6" Grid.Row="1" Content="6" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>

            <Grid Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="6">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid x:Name="RaceList">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                </Grid>
                <Grid x:Name="lastHolder" Background="Transparent" Grid.Row="1" MouseEnter="lastHolder_MouseEnter" MouseLeave="lastHolder_MouseLeave">
                    <Grid x:Name="lastRaceList">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.OpacityMask>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="#00000000" Offset="1" />
                                <GradientStop Color="#ff000000" Offset="0" />
                            </LinearGradientBrush>
                        </Grid.OpacityMask>
                    </Grid>
                    <Label x:Name="mouseOverlay" Background="Black" Opacity="0.3" Visibility="Collapsed"/>
                    <Button x:Name="deleteLast" Visibility="Collapsed" Click="deleteLast_Click" HorizontalAlignment="Center" ToolTip="Delete This Race" Style="{DynamicResource MaterialDesignToolForegroundButton}" Width="48" Height="48">
                        <materialDesign:PackIcon Kind="Delete" Width="24" Height="24" />
                    </Button>
                </Grid>
            </Grid>

            <Grid x:Name="winnerGrid" Grid.Column="0" Grid.Row="0" Grid.RowSpan="4" Grid.ColumnSpan="8"/>
        </Grid>

        <Grid x:Name="Overlay" Background="Black" Opacity="0.7" Visibility="Collapsed" MouseUp="Overlay_MouseUp">

        </Grid>
        <Grid x:Name="Drawer" Background="#FFFAFAFA" Margin="0 ,0, -415,0" HorizontalAlignment="Right" Width="400">
            <materialDesign:ColorZone Grid.RowSpan="5" Grid.ColumnSpan="7" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" materialDesign:ShadowAssist.ShadowDepth="Depth3"/>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="8">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="8"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="8"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="8"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="8"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="8"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="8"/>
                        </Grid.RowDefinitions>
                        <Button Click="Button_Click_2" ToolTip="Refresh Serial Ports" Style="{DynamicResource MaterialDesignToolButton}" Grid.Column="1" Grid.Row="1" Width="32" Height="32">
                            <materialDesign:PackIcon Kind="Refresh" Foreground="White" Height="24" Width="24"/>
                        </Button>
                        <ComboBox x:Name="cboPorts" FontSize="14" Grid.Column="3" Grid.Row="1"  materialDesign:TextFieldAssist.Hint="Serial Port" Style="{StaticResource MaterialDesignFloatingHintComboBox}"/>
                        <Button x:Name="btnConnect" Click="btnConnect_Click" Grid.Column="5" Grid.Row="1" Content="Connect"/>
                    </Grid>
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton x:Name="btnShowAdvance" Checked="btnShowAdvance_Checked" Unchecked="btnShowAdvance_Checked" Style="{StaticResource MaterialDesignSwitchToggleButton}" Margin="16, 0, 0, 0" VerticalAlignment="Center" />
                        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Content="Show Advanced Options" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                    <TextBox x:Name="tbEmptyBarcode" TextChanged="tbEmptyBarcode_TextChanged" Margin="8" Grid.Column="2" FontSize="14" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Bottom" materialDesign:TextFieldAssist.Hint="Empty Lane Barcode"/>
                    <TextBox x:Name="tbResetBarcode" TextChanged="tbResetBarcode_TextChanged" Margin="8" Grid.Column="2" FontSize="14" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Bottom" materialDesign:TextFieldAssist.Hint="Clear Race Barcode"/>
                    <TextBox x:Name="tbEndBarcode" TextChanged="tbEndBarcode_TextChanged" Margin="8" Grid.Column="2" FontSize="14" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Bottom" materialDesign:TextFieldAssist.Hint="Force Race To End Barcode"/>
                    <Grid Margin="8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Label IsEnabled="False" FontSize="14" Content="Current Race Display Height" VerticalAlignment="Center"/>
                        <Slider x:Name="heightSlider" ValueChanged="heightSlider_ValueChanged" Grid.Row="1" Margin="8" Minimum="0.5" Maximum="3"/>
                    </Grid>
                    <Grid Margin="8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Label IsEnabled="False" FontSize="14" Content="Standings' Zoom" VerticalAlignment="Center"/>
                        <Slider x:Name="uiScaleSlider" ValueChanged="uiScaleSlider_ValueChanged" Grid.Row="1" Margin="8" Minimum="1" Maximum="4"/>
                    </Grid>
                    <Grid Margin="8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Label IsEnabled="False" FontSize="14" Content="Tiles' Zoom" VerticalAlignment="Center"/>
                        <Slider x:Name="tilesSlider" ValueChanged="tilesSlider_ValueChanged"  Grid.Row="1" Margin="8" Minimum="1" Maximum="4"/>
                    </Grid>
                    <Grid Margin="8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Label IsEnabled="False" FontSize="14" Content="Auto Scroll Speed" VerticalAlignment="Center"/>
                        <Slider x:Name="autoScrollSlider" ValueChanged="autoScrollSlider_ValueChanged" Grid.Row="1" Margin="8" Minimum="50" Maximum="300"/>
                    </Grid>
                    <Grid x:Name="competitionManager" Margin="8" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Content="Competition Manager" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Button x:Name="btnCompOpen" ToolTip="Open Archived Competition" Click="btnCompOpen_Click" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8" Panel.ZIndex="2" Width="32">
                            <materialDesign:PackIcon Kind="PackageVariant" Width="24" Height="24" />
                        </Button>
                        <Button x:Name="btnCompClose" ToolTip="Archive Current Competition" Click="btnCompClose_Click" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8" Panel.ZIndex="2" Width="32">
                            <materialDesign:PackIcon Kind="PackageVariantClosed" Width="24" Height="24" />
                        </Button>
                        <Button x:Name="btnCompExport" ToolTip="Export Current Competition To Excel File" Click="btnCompExport_Click" Grid.Row="0" Grid.Column="3" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8" Panel.ZIndex="2" Width="32">
                            <materialDesign:PackIcon Kind="Export" Width="24" Height="24" />
                        </Button>
                        <TextBox x:Name="tbCompName" TextChanged="tbCompName_TextChanged" Margin="8, 0, 8, 8" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4" FontSize="14" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Bottom" materialDesign:TextFieldAssist.Hint="Competition's Name"/>
                    </Grid>
                    <Grid Margin="8" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ListBox x:Name="lbClasses" Grid.Row="1" Grid.ColumnSpan="3"/>
                        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Content="Car Classes" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Button x:Name="btnClassDelete" ToolTip="Delete Selected Class" Click="btnClassDelete_Click"  Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8" Panel.ZIndex="2" Width="32">
                            <materialDesign:PackIcon Kind="Delete" Width="24" Height="24" />
                        </Button>
                        <Button x:Name="btnClassAdd" Click="btnClassAdd_Click" ToolTip="Add Class" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8" Panel.ZIndex="2" Width="32">
                            <materialDesign:PackIcon Kind="Plus" Width="24" Height="24" />
                        </Button>
                    </Grid>
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <Grid x:Name="HostGrid">

        </Grid>
        <Grid x:Name="MessageGrid">

        </Grid>
    </Grid>
</Window>
